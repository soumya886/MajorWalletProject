spring.application.name=user-service
server.port = 9000
spring.cloud.config.import-check.enabled=false

#spring.datasource.url=jdbc:postgresql://localhost:5432/jbdl711_major_project
#spring.datasource.username=postgres
#spring.datasource.password=root66
#spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate dialect for PostgreSQL
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Schema generation strategy (create, update, none, validate)
#spring.jpa.hibernate.ddl-auto=update 

# Show executed SQL in logs
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true


spring.config.import=optional:configserver:http://localhost:9999
spring.profiles.active=prod

#Kafka producer configuration
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer


management.tracing.enabled=true
management.tracing.sampling.probability=1.0

otel.traces.exporter=zipkin
otel.exporter.zipkin.endpoint=http://localhost:9411/api/v2/spans
management.endpoints.web.exposure.include=health,info,metrics,loggers,beans,env,mappings,trace,httptrace

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]